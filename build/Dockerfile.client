# ─────────────────────────────────────────────────────────────────────────────
# CLIENT (Python 3.8 + Ubuntu 24.04)
# ─────────────────────────────────────────────────────────────────────────────
FROM ubuntu:24.04 AS base-client

# Обновляем репозитории и устанавливаем Python 3.8 (через deadsnakes либо билд)
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
      software-properties-common curl wget ca-certificates \
      build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
      libffi-dev libncursesw5-dev libgdbm-dev libc6-dev tk-dev liblzma-dev \
      libnss3-dev libncurses5-dev libncursesw5-dev xz-utils llvm && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
      python3.8 python3.8-venv python3.8-distutils python3.8-dev python3-pip && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# (Опционально) создаём виртуальное окружение и активируем, если нужно:
# RUN python3.8 -m venv venv
# ENV PATH="/app/venv/bin:$PATH"

# Копируем только список зависимостей, чтобы кэшировать слой при неизменном requirements:
COPY client/requirements.txt .

# Устанавливаем зависимости
RUN python3.8 -m pip install --upgrade pip && \
    python3.8 -m pip install --no-cache-dir -r requirements.txt

# Копируем весь код клиентской части
COPY client/ /app

# Если клиент стартует через какой-то скрипт, например client.py:
CMD ["python3.8", "client.py"]
